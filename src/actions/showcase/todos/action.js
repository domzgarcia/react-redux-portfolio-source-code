import {TOGGLE_CARD, 
    ADD_TODO, 
    MARKED_AS_DONE,
    EDIT_TODO,
    DELETE_TODO,
    TODO_FILTER_CHANGE,
    FIREBASE_FETCH_ALL
} from 'Actions/showcase/todos/actionType.js';
import firebase from 'Services/firebase';
import v4 from 'uuid/v4';

export const toggleCard = () => {
    return {
        type: TOGGLE_CARD
    }
}
export const addTodo = (todoText) => {
    return (dispatch) => {
        firebase.addTodo({ 
            name: todoText,
            done: false,
            saveLocalStorage: false,
            savedFirebase: true,
            uuid: v4(),
        })
        .then( (response) => {
            const autoGeneratedKey = response.data.name;
            dispatch({
                type: ADD_TODO,
                payload: {
                    todoText,
                    autoGeneratedKey
                }
            })
            
            // sync id to firebase
            firebase.syncId(autoGeneratedKey)
            .then((response)=>{
                // do nothing
            })
        })
    }
}
export const markedAsDone = (uuid, bool) => {
    return (dispatch) => {
        firebase.markedAsDone(uuid, bool)
            .then( (response) => {
                // update local
                dispatch({
                    type: MARKED_AS_DONE,
                    payload: {
                        uuid
                    }
                })
            })
    }
}
export const editTodo = (newText, uuid) => {
    return (dispatch) => {
        firebase.editTodo(uuid, newText)
            .then( (response) => {
                // update local
                dispatch({
                    type: EDIT_TODO,
                    payload: {
                        newText,
                        uuid
                    }
                })
            });
    }
}
export const deleteTodo = (uuid) => {
    return (dispatch) => {
        firebase.deleteTodo(uuid)
            .then( (response) => {
                // update local
                dispatch({
                    type: DELETE_TODO,
                    payload: {
                        uuid
                    }
                })
            })
    }
}
export const todoFilterChangeTo = (filter) => {
    return {
        type: TODO_FILTER_CHANGE,
        payload: {
            filter
        }
    }
}

/** Firebase Action Creator */
export const fetchFromFirebase = () => {
    return (dispatch) => {
        firebase.getAll()
        .then( (response) => {
            const objectsToArrayObjects = Object.keys(response.data.todos).map(function(key) {
                return response.data.todos[key];
            });
            
            console.log('objectsToArrayObjects', objectsToArrayObjects);
            
            return dispatch({
                type: FIREBASE_FETCH_ALL,
                payload: {
                    todos: objectsToArrayObjects
                }
            });
        });
    }
}